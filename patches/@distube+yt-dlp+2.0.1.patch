diff --git a/node_modules/@distube/yt-dlp/bin/yt-dlp.exe b/node_modules/@distube/yt-dlp/bin/yt-dlp.exe
index 77a73b5..a9d8c36 100644
Binary files a/node_modules/@distube/yt-dlp/bin/yt-dlp.exe and b/node_modules/@distube/yt-dlp/bin/yt-dlp.exe differ
diff --git a/node_modules/@distube/yt-dlp/dist/index.d.ts b/node_modules/@distube/yt-dlp/dist/index.d.ts
index 332f649..73ac176 100644
--- a/node_modules/@distube/yt-dlp/dist/index.d.ts
+++ b/node_modules/@distube/yt-dlp/dist/index.d.ts
@@ -361,16 +361,18 @@ interface YtDlpPlaylist {
 type YtDlpResponse = YtDlpVideo | YtDlpPlaylist;
 interface YtDlpOptions {
     update?: boolean;
+    extractorArgs?: string;
+    cookies?: string;
 }
 
 declare const json: (url: string, flags?: YtDlpFlags, options?: SpawnOptionsWithoutStdio) => Promise<YtDlpResponse>;
 declare const download: () => Promise<string>;
 
 declare class YtDlpPlugin extends PlayableExtractorPlugin {
-    constructor({ update }?: YtDlpOptions);
+    constructor({ update, cookies, extractorArgs }?: YtDlpOptions);
     init(distube: DisTube): void;
     validate(): boolean;
-    resolve<T>(url: string, options: ResolveOptions<T>): Promise<YtDlpSong<T> | Playlist<T>>;
+    resolve<T>(url: string, options: ResolveOptions<T>,): Promise<YtDlpSong<T> | Playlist<T>>;
     getStreamURL(song: Song): Promise<string>;
     getRelatedSongs(): never[];
 }
diff --git a/node_modules/@distube/yt-dlp/dist/index.js b/node_modules/@distube/yt-dlp/dist/index.js
index b17b126..a3d1016 100644
--- a/node_modules/@distube/yt-dlp/dist/index.js
+++ b/node_modules/@distube/yt-dlp/dist/index.js
@@ -125,9 +125,11 @@ var YtDlpPlugin = class extends import_distube.PlayableExtractorPlugin {
   static {
     __name(this, "YtDlpPlugin");
   }
-  constructor({ update } = {}) {
+  constructor({ update, cookies, extractorArgs } = {}) {
     super();
     if (update ?? true) download().catch(() => void 0);
+    this.cookies = cookies;
+    this.extractorArgs = extractorArgs;
   }
   init(distube) {
     super.init(distube);
@@ -147,7 +149,9 @@ var YtDlpPlugin = class extends import_distube.PlayableExtractorPlugin {
       noCallHome: true,
       preferFreeFormats: true,
       skipDownload: true,
-      simulate: true
+      simulate: true,
+      cookies: this.cookies,
+      extractorArgs: this.extractorArgs
     }).catch((e2) => {
       throw new import_distube.DisTubeError("YTDLP_ERROR", `${e2.stderr || e2}`);
     });
@@ -178,7 +182,9 @@ var YtDlpPlugin = class extends import_distube.PlayableExtractorPlugin {
       preferFreeFormats: true,
       skipDownload: true,
       simulate: true,
-      format: "ba/ba*"
+      format: "ba/ba*",
+      cookies: this.cookies,
+      extractorArgs: this.extractorArgs
     }).catch((e2) => {
       throw new import_distube.DisTubeError("YTDLP_ERROR", `${e2.stderr || e2}`);
     });
